// main global script file

// called when the game starts, before the first room is loaded
function game_start() 
{
  mouse.Visible = true;
  mouse.Mode = eModePointer;
  
  EmptyTextPrompt.Enabled = false;
}

// put anything you want to happen every game cycle in here
function repeatedly_execute() 
{
}

// put here anything you want to happen every game cycle, even when the game is blocked
function repeatedly_execute_always() 
{
}

function enable_message_gui()
{
  gMessageGui.Visible = true;
}

function disable_message_gui()
{
  gMessageGui.Visible = false;
}

function enable_review_gui()
{
  gReviewGui.Visible = true;
}

function disable_review_gui()
{
  gReviewGui.Visible = false;
}

function disable_guis()
{
  disable_message_gui();
  disable_review_gui();
}

function showReview(int number)
{    
  String reasons[26];
  reasons[0] = "";
  
  //Tutorial
  reasons[1] = "A historic work of art. Man, laid bare before his creator.";
  reasons[2] = "One of the first nude photographs. Taken by Julien Vallou de Villeneuve.";
  reasons[3] = "A scene from one of the first pornographic films. Presented for its historical significance.";
  reasons[4] = "A picture from my latest photoshoot";
  
  //User-submitted
  reasons[5] = "Me in my first ever magazine appearance. A celebration of my femininity. #EmpoweredWomen";
  reasons[6] = "Sun and waves and a beautiful body. You wish this photo was in a museum.";
  reasons[7] = "A photographic study in image cropping and framing.";
  reasons[8] = "This picture doesn't even have nudity. Stupid algorithm.";
  reasons[9] = "Anatomical picture of the vagina. Sending it to a classmate who missed lecture.";
  reasons[10] = "This is not nudity! This is how we dress.";
  reasons[11] = "This is my body. It's not your place to judge if this is appropriate.";
  reasons[12] = "This is for a professional photo shoot highlighting the male body. This is art!!";
  reasons[13] = "Check out this sweet air. Most definitely art.";
  reasons[14] = "Showing off my lingerie. Fashion is art.";
  reasons[15] = "Nude ballet. ";
  reasons[16] = "A self portrait of the artist and his lover.";
  reasons[17] = "Buds. Obviously art. I can't believe I have to type this.";
  reasons[18] = "Reference image for figure drawing.";
  reasons[19] = "Showing the beauty of my body. You can be beautiful no matter your age or body type.";
  reasons[20] = "My body is a temple.";
  reasons[21] = "A study of the differences between boys and girls.";
  reasons[22] = "See how the light plays upon my body. A structured composition.";
  reasons[23] = "Nudity alert? Take this for your nudity alert. Famous art. In your face!";
  reasons[24] = "Celebrating our bodies and our community at Pride!";
  reasons[25] = "I'm a firefighter. This was taken for a fundraiser calendar supporting our fire station.";
  
  object[currentObject].Visible = false;
  currentObject = number;
  object[currentObject].Visible = true;
  Explanation.Text = reasons[currentObject];
}

function showModal(String text, int height)
{
  gPopupGui.Visible = true;
  
  int oldHeight = gPopupGui.Height;
  int offset = oldHeight - height;
  
  gPopupGui.Height = height;
  oModalText.Height = oModalText.Height - offset;
  oModalText.Text = text;
  modalButton.SetPosition(modalButton.X, modalButton.Y - offset);
}

function goto_send_first_picture()
{
  return;
}

function approveClick(GUIControl *control, MouseButton button)
{
  if (reviewCount == 4)
  {
    showModal(modalWarning4, 60);
    //TODO: warning about image that is not acceptable
  }
  else
  {
    if (reviewCount % 4 == 0)
    {
      //TODO: leave review process
    }
    else
    {
      reviewCount++;
      showReview(reviewCount);
    }
  }
}

function rejectClick(GUIControl *control, MouseButton button)
{
  if (reviewCount == 1)
  {
    showModal(modalWarning1, 60);
    return;
  }
  else if (reviewCount == 2)
  {
  showModal(modalWarning2, 60);
    return;
  }
  else if (reviewCount == 3)
  {
    showModal(modalWarning3, 60);
    return;
  }
  else if (reviewCount == 4)
  {
    //Show tutorial complete
    showModal(tutorialCompleteMessage,  80);
    tutorialMessageVisible = true;
    return;
  }
  else
  {
    reviewCount++;
    if (reviewCount % 4 == 0)
    {
      //TODO: leave review process
    }
    else
    {
      showReview(reviewCount);
    }
  }
}

function closeModal(GUIControl *control, MouseButton button)
{
  if (tutorialMessageVisible == true)
  {
    object[currentObject].Visible = false;
    tutorialMessageVisible = false;
    enable_message_gui();
  }
  
  if (tutorialMessage0Visible == true)
  {
    tutorialMessage0Visible = false;
    enable_review_gui();
    showReview(1);
  }
  
  gPopupGui.Visible = false;
  oModalText.Text = "";
  
}

// called when a key is pressed. keycode holds the key's ASCII code
function on_key_press(eKeyCode keycode) 
{
  if (IsGamePaused()) keycode = 0; // game paused, so don't react to keypresses
  
  if (keycode == eKeyCtrlQ) QuitGame(1); // Ctrl-Q
  if (keycode == eKeyF9) RestartGame(); // F9
  if (keycode == eKeyF12) SaveScreenShot("scrnshot.pcx");  // F12
  if (keycode == eKeyCtrlS) Debug(0,0); // Ctrl-S, give all inventory
  if (keycode == eKeyCtrlV) Debug(1,0); // Ctrl-V, version
  if (keycode == eKeyCtrlA) Debug(2,0); // Ctrl-A, show walkable areas
  if (keycode == eKeyCtrlX) Debug(3,0); // Ctrl-X, teleport to room
  
  if (keycode == eKey1)
  {
    disable_guis();
    enable_message_gui();
  }
  
  if (keycode == eKey2)
  {
    disable_guis();
    
    reviewCount = 1;
    tutorialMessage0Visible = true;
    showModal(tutorialMessage,  100);
  }
}

function on_mouse_click(MouseButton button) // called when a mouse button is clicked. button is either LEFT or RIGHT
{
  if (IsGamePaused() == 1) // Game is paused, so do nothing (ie. don't allow mouse click)
  {
  }
  else if (button == eMouseLeft) 
  {
    Room.ProcessClick(mouse.x,mouse.y, mouse.Mode);
  }
}

function dialog_request(int param) {
}